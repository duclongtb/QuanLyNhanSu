/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import DAO.implement.Account;
import Model.AccountModel;
import Model.CustomTable.TaiKhoanTableModel;
import static View.MainForm.applyQualityRenderingHints;
import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Iroha
 */
public class taikhoanAdminPanel extends javax.swing.JPanel {

    /**
     * Creates new form luongPanel
     */
    java.awt.Frame bb;
    AccountModel acc = new AccountModel();
    boolean imageChange = false;
    String filename = "";
    public taikhoanAdminPanel(java.awt.Frame mainFrame, AccountModel account) {
        initComponents();
        bb=mainFrame;
        acc=account;
        prepare();
    }
    
    private void prepare(){
        table_taikhoan.getTableHeader().setDefaultRenderer(new HeaderColor());
        table_taikhoan.getTableHeader().setBackground(new Color(82,147,255));
        table_taikhoan.getTableHeader().setBackground(new Color(32, 136, 203));
        jScrollPane1.setVisible(false);
        btn_add.setVisible(false);
        btn_edit.setVisible(false);
        btn_delete.setVisible(false);
        btn_save.setVisible(false);
        btn_cancel.setVisible(false);
        btn_changeAvatar.setVisible(false);
        loadInfor();
    }
    
    private void loadInfor(){
        try{
            txt_tentaikhoan.setText(acc.getUsername());
            txt_ten.setText(acc.getTen());
            lb_avt.setSize(300, 300);
            if(acc.getAnh()!=null){
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(acc.getAnh()).getImage().getScaledInstance(lb_avt.getWidth(), lb_avt.getHeight(), Image.SCALE_SMOOTH));
                BufferedImage master = new BufferedImage(
                    imageIcon.getIconWidth(),
                    imageIcon.getIconHeight(),
                    BufferedImage.TYPE_INT_RGB);
                    Graphics g = master.createGraphics();
                imageIcon.paintIcon(null, g, 0,0);
                g.dispose();
                int diameter = Math.min(master.getWidth(), master.getHeight());
                BufferedImage mask = new BufferedImage(master.getWidth(), master.getHeight(), BufferedImage.TYPE_INT_ARGB);

                Graphics2D g2d = mask.createGraphics();
                applyQualityRenderingHints(g2d);
                g2d.fillOval(0, 0, diameter - 1, diameter - 1);
                g2d.dispose();

                BufferedImage masked = new BufferedImage(diameter, diameter, BufferedImage.TYPE_INT_ARGB);
                g2d = masked.createGraphics();
                applyQualityRenderingHints(g2d);
                int x = (diameter - master.getWidth()) / 2;
                int y = (diameter - master.getHeight()) / 2;
                g2d.drawImage(master, x, y, null);
                g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_IN));
                g2d.drawImage(mask, 0, 0, null);
                g2d.dispose();
                lb_avt.setIcon(new ImageIcon(masked));
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_changepass1 = new javax.swing.JButton();
        btn_changeAvatar = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        btn_manange = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        btn_edit = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        btn_changepass = new javax.swing.JButton();
        txt_matkhaucu = new javax.swing.JPasswordField();
        txt_matkhaumoi = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txt_ten = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txt_tentaikhoan = new javax.swing.JTextField();
        lb_avt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_taikhoan = new javax.swing.JTable();
        background = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_changepass1.setBackground(new java.awt.Color(24, 98, 151));
        btn_changepass1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_changepass1.setForeground(new java.awt.Color(255, 255, 255));
        btn_changepass1.setText("Đăng xuất");
        btn_changepass1.setBorder(null);
        btn_changepass1.setBorderPainted(false);
        btn_changepass1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_changepass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changepass1ActionPerformed(evt);
            }
        });
        add(btn_changepass1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 270, 100, 40));

        btn_changeAvatar.setBackground(new java.awt.Color(24, 98, 151));
        btn_changeAvatar.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_changeAvatar.setForeground(new java.awt.Color(255, 255, 255));
        btn_changeAvatar.setText("Thay ảnh");
        btn_changeAvatar.setBorder(null);
        btn_changeAvatar.setBorderPainted(false);
        btn_changeAvatar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_changeAvatar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changeAvatarActionPerformed(evt);
            }
        });
        add(btn_changeAvatar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 350, 110, 40));

        btn_cancel.setBackground(new java.awt.Color(24, 98, 151));
        btn_cancel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_cancel.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancel.setText("Huỷ");
        btn_cancel.setBorder(null);
        btn_cancel.setBorderPainted(false);
        btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });
        add(btn_cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 480, 210, 40));

        btn_save.setBackground(new java.awt.Color(24, 98, 151));
        btn_save.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_save.setForeground(new java.awt.Color(255, 255, 255));
        btn_save.setText("Lưu");
        btn_save.setBorder(null);
        btn_save.setBorderPainted(false);
        btn_save.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 410, 210, 40));

        btn_manange.setBackground(new java.awt.Color(24, 98, 151));
        btn_manange.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_manange.setForeground(new java.awt.Color(255, 255, 255));
        btn_manange.setText("Quản lý tài khoản");
        btn_manange.setBorder(null);
        btn_manange.setBorderPainted(false);
        btn_manange.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_manange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_manangeActionPerformed(evt);
            }
        });
        add(btn_manange, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, 210, 40));

        btn_add.setBackground(new java.awt.Color(24, 98, 151));
        btn_add.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_add.setForeground(new java.awt.Color(255, 255, 255));
        btn_add.setText("Thêm tài khoản");
        btn_add.setBorder(null);
        btn_add.setBorderPainted(false);
        btn_add.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 410, 210, 40));

        btn_edit.setBackground(new java.awt.Color(24, 98, 151));
        btn_edit.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_edit.setForeground(new java.awt.Color(255, 255, 255));
        btn_edit.setText("Sửa tài khoản");
        btn_edit.setBorder(null);
        btn_edit.setBorderPainted(false);
        btn_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });
        add(btn_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 480, 210, 40));

        btn_delete.setBackground(new java.awt.Color(24, 98, 151));
        btn_delete.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_delete.setText("Xoá tài khoản");
        btn_delete.setBorder(null);
        btn_delete.setBorderPainted(false);
        btn_delete.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 550, 210, 40));

        btn_changepass.setBackground(new java.awt.Color(24, 98, 151));
        btn_changepass.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btn_changepass.setForeground(new java.awt.Color(255, 255, 255));
        btn_changepass.setText("Đổi mật khẩu");
        btn_changepass.setBorder(null);
        btn_changepass.setBorderPainted(false);
        btn_changepass.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_changepass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changepassActionPerformed(evt);
            }
        });
        add(btn_changepass, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 270, 210, 40));

        txt_matkhaucu.setBackground(new java.awt.Color(255, 255, 255, 0));
        txt_matkhaucu.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txt_matkhaucu.setForeground(new java.awt.Color(255, 255, 255));
        txt_matkhaucu.setBorder(null);
        txt_matkhaucu.setOpaque(false);
        add(txt_matkhaucu, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, 360, -1));

        txt_matkhaumoi.setBackground(new java.awt.Color(255, 255, 255, 0));
        txt_matkhaumoi.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txt_matkhaumoi.setForeground(new java.awt.Color(255, 255, 255));
        txt_matkhaumoi.setBorder(null);
        txt_matkhaumoi.setOpaque(false);
        add(txt_matkhaumoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 190, 350, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mật khẩu mới:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, -1, -1));
        add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 220, 350, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Họ và tên:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, -1, -1));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 120, 390, -1));

        txt_ten.setBackground(new java.awt.Color(255, 255, 255, 0));
        txt_ten.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txt_ten.setForeground(new java.awt.Color(255, 255, 255));
        txt_ten.setBorder(null);
        txt_ten.setDisabledTextColor(new java.awt.Color(0, 51, 255));
        txt_ten.setEnabled(false);
        txt_ten.setOpaque(false);
        add(txt_ten, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, 390, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Mật khẩu cũ:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 140, -1, -1));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 170, 360, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tên tài khoản:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 40, -1, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 70, 350, -1));

        txt_tentaikhoan.setBackground(new java.awt.Color(255, 255, 255, 0));
        txt_tentaikhoan.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        txt_tentaikhoan.setForeground(new java.awt.Color(255, 255, 255));
        txt_tentaikhoan.setBorder(null);
        txt_tentaikhoan.setDisabledTextColor(new java.awt.Color(0, 51, 255));
        txt_tentaikhoan.setEnabled(false);
        txt_tentaikhoan.setOpaque(false);
        add(txt_tentaikhoan, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 40, 350, -1));

        lb_avt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(lb_avt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 300, 300));

        table_taikhoan.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        table_taikhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table_taikhoan.setCellSelectionEnabled(true);
        table_taikhoan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table_taikhoan.setFocusable(false);
        table_taikhoan.setGridColor(new java.awt.Color(204, 204, 204));
        table_taikhoan.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table_taikhoan.setRowHeight(25);
        table_taikhoan.setSelectionBackground(new java.awt.Color(255, 102, 102));
        table_taikhoan.setShowVerticalLines(false);
        table_taikhoan.getTableHeader().setReorderingAllowed(false);
        table_taikhoan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_taikhoanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_taikhoan);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 360, 230));

        background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/panelDefault.png"))); // NOI18N
        add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 650));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_changepassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changepassActionPerformed
        try{
            if(String.valueOf(txt_matkhaucu.getPassword()).equals(""))
                throw new Exception("Mật khẩu cũ không được để trống!");
            if(String.valueOf(txt_matkhaumoi.getPassword()).equals(""))
                throw new Exception("Mật khẩu mới không được để trống!");
            if(new Account().loginAccount(acc.getUsername(),String.valueOf(txt_matkhaucu.getPassword()))==null)
                throw new Exception("Mật khẩu cũ sai");
            new Account().updatePassword(acc.getUsername(), String.valueOf(txt_matkhaumoi.getPassword()));
            txt_matkhaucu.setText("");
            txt_matkhaumoi.setText("");
            JOptionPane.showMessageDialog(this, "Đổi mật khẩu thành công!");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Đổi mật khẩu thất bại!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_changepassActionPerformed

    private void table_taikhoanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_taikhoanMouseClicked
        int row = table_taikhoan.rowAtPoint(evt.getPoint());
        if(row>=0)
        {
            imageChange = false;
            byte[] image=new Account().getAvatar(table_taikhoan.getValueAt(row, 0).toString());
            if(image!=null){
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(image).getImage().getScaledInstance(lb_avt.getWidth(), lb_avt.getHeight(), Image.SCALE_SMOOTH));
                lb_avt.setIcon(imageIcon);
//                BufferedImage master = new BufferedImage(
//                    imageIcon.getIconWidth(),
//                    imageIcon.getIconHeight(),
//                    BufferedImage.TYPE_INT_RGB);
//                    Graphics g = master.createGraphics();
//                imageIcon.paintIcon(null, g, 0,0);
//                g.dispose();
//                int diameter = Math.min(master.getWidth(), master.getHeight());
//                BufferedImage mask = new BufferedImage(master.getWidth(), master.getHeight(), BufferedImage.TYPE_INT_ARGB);
//
//                Graphics2D g2d = mask.createGraphics();
//                applyQualityRenderingHints(g2d);
//                g2d.fillOval(0, 0, diameter - 1, diameter - 1);
//                g2d.dispose();
//
//                BufferedImage masked = new BufferedImage(diameter, diameter, BufferedImage.TYPE_INT_ARGB);
//                g2d = masked.createGraphics();
//                applyQualityRenderingHints(g2d);
//                int x = (diameter - master.getWidth()) / 2;
//                int y = (diameter - master.getHeight()) / 2;
//                g2d.drawImage(master, x, y, null);
//                g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_IN));
//                g2d.drawImage(mask, 0, 0, null);
//                g2d.dispose();
//                lb_avt.setIcon(new ImageIcon(masked));
            }
            else{
                lb_avt.setIcon(null);
            }
            txt_tentaikhoan.setText(table_taikhoan.getValueAt(row, 0).toString());
            txt_ten.setText(table_taikhoan.getValueAt(row, 1).toString());
        }
    }//GEN-LAST:event_table_taikhoanMouseClicked

    private void btn_manangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_manangeActionPerformed
        if(btn_manange.getText().equals("Quản lý tài khoản")){
            btn_changepass.setEnabled(false);
            jScrollPane1.setVisible(true);
            btn_add.setVisible(true);
            btn_edit.setVisible(true);
            btn_delete.setVisible(true);
            btn_changeAvatar.setVisible(true);
            txt_matkhaucu.setEnabled(false);
            txt_matkhaumoi.setEnabled(false);
            txt_ten.setEnabled(true);
            lb_avt.setIcon(null);
            txt_tentaikhoan.setText("");
            txt_ten.setText("");
            txt_matkhaucu.setText("");
            txt_matkhaumoi.setText("");
            btn_manange.setText("Trở về");
            loadDataTable();
        }
        else{
            btn_changepass.setEnabled(true);
            jScrollPane1.setVisible(false);
            btn_add.setVisible(false);
            btn_edit.setVisible(false);
            btn_delete.setVisible(false);
            btn_changeAvatar.setVisible(false);
            txt_matkhaucu.setEnabled(true);
            txt_matkhaumoi.setEnabled(true);
            txt_ten.setEnabled(false);
            txt_matkhaucu.setText("");
            txt_matkhaumoi.setText("");
            lb_avt.setIcon(null);
            loadInfor();
            btn_manange.setText("Quản lý tài khoản");
        }
    }//GEN-LAST:event_btn_manangeActionPerformed

    private void loadDataTable(){
        List<AccountModel> ls = new Account().getAccount();
        table_taikhoan.setModel(new TaiKhoanTableModel(ls));
    }
    
    public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean selected, boolean focused, int row, int column) {
            super.getTableCellRendererComponent(table, value, selected, focused, row, column);
            setOpaque(false);
            setFont(new Font("Times New Roman", Font.BOLD, 16));
            setForeground(new Color(255,255,255));
            setPreferredSize(new Dimension(1230, 35));
            return this;
        }

    }
    
    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        btn_cancel.setVisible(true);
        btn_save.setVisible(true);
        btn_changepass.setEnabled(false);
        btn_manange.setEnabled(false);
        btn_add.setEnabled(false);
        btn_edit.setEnabled(false);
        btn_delete.setEnabled(false);
        txt_matkhaumoi.setEnabled(true);
        txt_tentaikhoan.setEnabled(true);
        txt_tentaikhoan.setText("");
        txt_ten.setText("");
        txt_matkhaucu.setText("");
        txt_matkhaumoi.setText("");
        lb_avt.setIcon(null);
        imageChange=false;
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed
        try{
            if(txt_ten.getText().equals("")){
                txt_ten.requestFocus();
                throw new Exception("Tên không được để trống!");
            }
            if(lb_avt.getIcon()==null){
                throw new Exception("Ảnh đại diện không được để trống");
            }
            byte[] person_image;
            if(imageChange){
                File image = new File(filename);
                FileInputStream fis = new FileInputStream(image);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                for(int readNum; (readNum=fis.read(buf))!=-1;){
                    bos.write(buf,0,readNum);
            }
            person_image=bos.toByteArray();
            }
            else{
                person_image=new Account().getAvatar(txt_tentaikhoan.getText());
            }
            new Account().updateAccount(txt_tentaikhoan.getText(), txt_ten.getText(),person_image);
            imageChange = false;
            loadDataTable();
            JOptionPane.showMessageDialog(this, "Sửa thông tin thành công!");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Sửa thông tin thất bại!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_editActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        try{
            new Account().deleteAccount(txt_tentaikhoan.getText());
            imageChange=false;
            lb_avt.setIcon(null);
            txt_tentaikhoan.setText("");
            txt_ten.setText("");
            txt_matkhaucu.setText("");
            txt_matkhaumoi.setText("");
            loadDataTable();
            JOptionPane.showMessageDialog(this, "Xoá thành công");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Xoá thất bại!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void resetAdd(){
        imageChange = false;
        btn_cancel.setVisible(false);
        btn_save.setVisible(false);
        btn_changepass.setEnabled(true);
        btn_manange.setEnabled(true);
        btn_add.setEnabled(true);
        btn_edit.setEnabled(true);
        btn_delete.setEnabled(true);
        txt_matkhaumoi.setEnabled(false);
        txt_tentaikhoan.setEnabled(false);
        txt_tentaikhoan.setText("");
        txt_ten.setText("");
        txt_matkhaucu.setText("");
        txt_matkhaumoi.setText("");
        lb_avt.setIcon(null);
    }
    
    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        resetAdd();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        try{
            if(new Account().checkAccount(txt_tentaikhoan.getText()))
                throw new Exception("Tài khoản này đã tồn tại!");
            if(String.valueOf(txt_matkhaumoi.getPassword()).equals(""))
                throw new Exception("Mật khẩu mới không được để trống!");
            if(lb_avt.getIcon()==null){
                throw new Exception("Ảnh đại diện không được để trống");
            }
            byte[] person_image;
            File image = new File(filename);
            FileInputStream fis = new FileInputStream(image);
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[1024];
            for(int readNum; (readNum=fis.read(buf))!=-1;){
                bos.write(buf,0,readNum);
            }
            person_image=bos.toByteArray();
            new Account().createAccount(txt_tentaikhoan.getText(), String.valueOf(txt_matkhaumoi.getPassword()), txt_ten.getText(), person_image);
            resetAdd();
            loadDataTable();
            JOptionPane.showMessageDialog(this, "Thêm tài khoản thành công!");
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Thêm tài khoản thất bại!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_saveActionPerformed

    private void btn_changeAvatarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changeAvatarActionPerformed
        try{
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(this);
            File f = chooser.getSelectedFile();
            if(f!=null)
            {
                String filenamez = f.getAbsolutePath();
                ImageIcon imageIcon = new ImageIcon(new ImageIcon(filenamez).getImage().getScaledInstance(lb_avt.getWidth(), lb_avt.getHeight(), Image.SCALE_SMOOTH));
                lb_avt.setIcon(imageIcon);
    //            BufferedImage master = new BufferedImage(
    //                imageIcon.getIconWidth(),
    //                imageIcon.getIconHeight(),
    //                BufferedImage.TYPE_INT_RGB);
    //                Graphics g = master.createGraphics();
    //            imageIcon.paintIcon(null, g, 0,0);
    //            g.dispose();
    //            int diameter = Math.min(master.getWidth(), master.getHeight());
    //            BufferedImage mask = new BufferedImage(master.getWidth(), master.getHeight(), BufferedImage.TYPE_INT_ARGB);
    //
    //            Graphics2D g2d = mask.createGraphics();
    //            applyQualityRenderingHints(g2d);
    //            g2d.fillOval(0, 0, diameter - 1, diameter - 1);
    //            g2d.dispose();
    //
    //            BufferedImage masked = new BufferedImage(diameter, diameter, BufferedImage.TYPE_INT_ARGB);
    //            g2d = masked.createGraphics();
    //            applyQualityRenderingHints(g2d);
    //            int x = (diameter - master.getWidth()) / 2;
    //            int y = (diameter - master.getHeight()) / 2;
    //            g2d.drawImage(master, x, y, null);
    //            g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.DST_IN));
    //            g2d.drawImage(mask, 0, 0, null);
    //            g2d.dispose();
    //            lb_avt.setIcon(new ImageIcon(masked));
                imageChange = true;
                filename = filenamez;
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_changeAvatarActionPerformed

    private void btn_changepass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changepass1ActionPerformed
        LoginForm f = new LoginForm();
        bb.dispose();
        f.setVisible(true);
    }//GEN-LAST:event_btn_changepass1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_changeAvatar;
    private javax.swing.JButton btn_changepass;
    private javax.swing.JButton btn_changepass1;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_manange;
    private javax.swing.JButton btn_save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lb_avt;
    private javax.swing.JTable table_taikhoan;
    private javax.swing.JPasswordField txt_matkhaucu;
    private javax.swing.JPasswordField txt_matkhaumoi;
    private javax.swing.JTextField txt_ten;
    private javax.swing.JTextField txt_tentaikhoan;
    // End of variables declaration//GEN-END:variables
}
